// koffee 1.3.0
var Invisibles, _, kerror, ref,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), kerror = ref.kerror, _ = ref._;

Invisibles = (function() {
    function Invisibles(editor) {
        this.editor = editor;
        this.onLineChanged = bind(this.onLineChanged, this);
        this.onLineInserted = bind(this.onLineInserted, this);
        this.onFile = bind(this.onFile, this);
        this.editor.on('file', this.onFile);
    }

    Invisibles.prototype.del = function() {
        return this.editor.removeListener('file', this.onFile);
    };

    Invisibles.prototype.onFile = function(file) {
        if (window.state.get("invisibles|" + file)) {
            return this.show();
        } else {
            return this.clear();
        }
    };

    Invisibles.prototype.onLineInserted = function(li) {
        var kind, line, n, p, results, s;
        line = this.editor.line(li);
        kind = line.endsWith(' ') && 'trailing' || 'newline';
        this.editor.meta.add({
            line: li,
            html: '&#9687',
            start: line.length,
            end: line.length,
            yOffset: -1,
            clss: 'invisible ' + kind
        });
        s = this.editor.tabline(li);
        p = 0;
        results = [];
        while (p < s.length) {
            n = 1;
            if (s[p] === '\t') {
                n = 4 - (p % 4);
                s = s.splice(p, 1, _.padStart("", n));
                this.editor.meta.add({
                    line: li,
                    html: '&#9656',
                    start: p,
                    end: p,
                    yOffset: -1,
                    clss: 'invisible invisible-tab'
                });
            }
            results.push(p += n);
        }
        return results;
    };

    Invisibles.prototype.onLineChanged = function(li) {
        var metas;
        metas = this.editor.meta.metasAtLineIndex(li).filter(function(m) {
            return m[2].clss.startsWith('invisible');
        });
        if (!metas.length) {
            return kerror("no invisible meta at line " + li + "?");
        }
        this.editor.meta.delMeta(metas[0]);
        return this.onLineInserted(li);
    };

    Invisibles.prototype.activate = function() {
        var ref1;
        window.state.set("invisibles|" + ((ref1 = this.editor.currentFile) != null ? ref1 : this.editor.name), true);
        return this.show();
    };

    Invisibles.prototype.deactivate = function() {
        window.state.set("invisibles|" + this.editor.currentFile);
        return this.clear();
    };

    Invisibles.prototype.clear = function() {
        this.editor.removeListener('lineChanged', this.onLineChanged);
        this.editor.removeListener('lineInserted', this.onLineInserted);
        return this.editor.meta.delClass('invisible');
    };

    Invisibles.prototype.show = function() {
        var i, li, ref1, results;
        this.clear();
        this.editor.on('lineChanged', this.onLineChanged);
        this.editor.on('lineInserted', this.onLineInserted);
        results = [];
        for (li = i = 0, ref1 = this.editor.numLines(); 0 <= ref1 ? i < ref1 : i > ref1; li = 0 <= ref1 ? ++i : --i) {
            results.push(this.onLineInserted(li));
        }
        return results;
    };

    return Invisibles;

})();

module.exports = {
    actions: {
        toggleInvisibles: {
            name: 'Toggle Invisibles',
            text: 'toggle invisibles for current file',
            combo: 'ctrl+i'
        }
    },
    toggleInvisibles: function() {
        var ref1;
        if (!this.invisibles) {
            return;
        }
        if (window.state.get("invisibles|" + ((ref1 = this.currentFile) != null ? ref1 : this.name), false)) {
            return this.invisibles.deactivate();
        } else {
            return this.invisibles.activate();
        }
    },
    initInvisibles: function() {
        return this.invisibles != null ? this.invisibles : this.invisibles = new Invisibles(this);
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52aXNpYmxlcy5qcyIsInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQU9BLElBQUEsMEJBQUE7SUFBQTs7QUFBQSxNQUFnQixPQUFBLENBQVEsS0FBUixDQUFoQixFQUFFLG1CQUFGLEVBQVU7O0FBRUo7SUFFVyxvQkFBQyxNQUFEO1FBQUMsSUFBQyxDQUFBLFNBQUQ7Ozs7UUFBWSxJQUFDLENBQUEsTUFBTSxDQUFDLEVBQVIsQ0FBVyxNQUFYLEVBQW1CLElBQUMsQ0FBQSxNQUFwQjtJQUFiOzt5QkFFYixHQUFBLEdBQUssU0FBQTtlQUFHLElBQUMsQ0FBQSxNQUFNLENBQUMsY0FBUixDQUF1QixNQUF2QixFQUErQixJQUFDLENBQUEsTUFBaEM7SUFBSDs7eUJBRUwsTUFBQSxHQUFRLFNBQUMsSUFBRDtRQUVKLElBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFiLENBQWlCLGFBQUEsR0FBYyxJQUEvQixDQUFIO21CQUNJLElBQUMsQ0FBQSxJQUFELENBQUEsRUFESjtTQUFBLE1BQUE7bUJBR0ksSUFBQyxDQUFBLEtBQUQsQ0FBQSxFQUhKOztJQUZJOzt5QkFhUixjQUFBLEdBQWdCLFNBQUMsRUFBRDtBQUVaLFlBQUE7UUFBQSxJQUFBLEdBQU8sSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQWEsRUFBYjtRQUNQLElBQUEsR0FBTyxJQUFJLENBQUMsUUFBTCxDQUFjLEdBQWQsQ0FBQSxJQUF1QixVQUF2QixJQUFxQztRQUM1QyxJQUFDLENBQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFiLENBQ0k7WUFBQSxJQUFBLEVBQU8sRUFBUDtZQUNBLElBQUEsRUFBTyxRQURQO1lBRUEsS0FBQSxFQUFPLElBQUksQ0FBQyxNQUZaO1lBR0EsR0FBQSxFQUFPLElBQUksQ0FBQyxNQUhaO1lBSUEsT0FBQSxFQUFTLENBQUMsQ0FKVjtZQUtBLElBQUEsRUFBTyxZQUFBLEdBQWUsSUFMdEI7U0FESjtRQVFBLENBQUEsR0FBSSxJQUFDLENBQUEsTUFBTSxDQUFDLE9BQVIsQ0FBZ0IsRUFBaEI7UUFDSixDQUFBLEdBQUk7QUFDSjtlQUFNLENBQUEsR0FBSSxDQUFDLENBQUMsTUFBWjtZQUNJLENBQUEsR0FBSTtZQUNKLElBQUcsQ0FBRSxDQUFBLENBQUEsQ0FBRixLQUFRLElBQVg7Z0JBQ0ksQ0FBQSxHQUFJLENBQUEsR0FBRSxDQUFDLENBQUEsR0FBRSxDQUFIO2dCQUNOLENBQUEsR0FBSSxDQUFDLENBQUMsTUFBRixDQUFTLENBQVQsRUFBWSxDQUFaLEVBQWUsQ0FBQyxDQUFDLFFBQUYsQ0FBVyxFQUFYLEVBQWUsQ0FBZixDQUFmO2dCQUNKLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQWIsQ0FDSTtvQkFBQSxJQUFBLEVBQU8sRUFBUDtvQkFDQSxJQUFBLEVBQU8sUUFEUDtvQkFFQSxLQUFBLEVBQU8sQ0FGUDtvQkFHQSxHQUFBLEVBQU8sQ0FIUDtvQkFJQSxPQUFBLEVBQVMsQ0FBQyxDQUpWO29CQUtBLElBQUEsRUFBTyx5QkFMUDtpQkFESixFQUhKOzt5QkFVQSxDQUFBLElBQUs7UUFaVCxDQUFBOztJQWRZOzt5QkFrQ2hCLGFBQUEsR0FBZSxTQUFDLEVBQUQ7QUFFWCxZQUFBO1FBQUEsS0FBQSxHQUFRLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFiLENBQThCLEVBQTlCLENBQWlDLENBQUMsTUFBbEMsQ0FBeUMsU0FBQyxDQUFEO21CQUFPLENBQUUsQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUFJLENBQUMsVUFBVixDQUFxQixXQUFyQjtRQUFQLENBQXpDO1FBQ1IsSUFBb0QsQ0FBSSxLQUFLLENBQUMsTUFBOUQ7QUFBQSxtQkFBTyxNQUFBLENBQU8sNEJBQUEsR0FBNkIsRUFBN0IsR0FBZ0MsR0FBdkMsRUFBUDs7UUFDQSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFiLENBQXFCLEtBQU0sQ0FBQSxDQUFBLENBQTNCO2VBQ0EsSUFBQyxDQUFBLGNBQUQsQ0FBZ0IsRUFBaEI7SUFMVzs7eUJBYWYsUUFBQSxHQUFVLFNBQUE7QUFFTixZQUFBO1FBQUEsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFiLENBQWlCLGFBQUEsR0FBYSxtREFBdUIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUEvQixDQUE5QixFQUFxRSxJQUFyRTtlQUNBLElBQUMsQ0FBQSxJQUFELENBQUE7SUFITTs7eUJBS1YsVUFBQSxHQUFZLFNBQUE7UUFFUixNQUFNLENBQUMsS0FBSyxDQUFDLEdBQWIsQ0FBaUIsYUFBQSxHQUFjLElBQUMsQ0FBQSxNQUFNLENBQUMsV0FBdkM7ZUFDQSxJQUFDLENBQUEsS0FBRCxDQUFBO0lBSFE7O3lCQVdaLEtBQUEsR0FBTyxTQUFBO1FBRUgsSUFBQyxDQUFBLE1BQU0sQ0FBQyxjQUFSLENBQXVCLGFBQXZCLEVBQXVDLElBQUMsQ0FBQSxhQUF4QztRQUNBLElBQUMsQ0FBQSxNQUFNLENBQUMsY0FBUixDQUF1QixjQUF2QixFQUF1QyxJQUFDLENBQUEsY0FBeEM7ZUFDQSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFiLENBQXNCLFdBQXRCO0lBSkc7O3lCQVlQLElBQUEsR0FBTSxTQUFBO0FBRUYsWUFBQTtRQUFBLElBQUMsQ0FBQSxLQUFELENBQUE7UUFFQSxJQUFDLENBQUEsTUFBTSxDQUFDLEVBQVIsQ0FBVyxhQUFYLEVBQTJCLElBQUMsQ0FBQSxhQUE1QjtRQUNBLElBQUMsQ0FBQSxNQUFNLENBQUMsRUFBUixDQUFXLGNBQVgsRUFBMkIsSUFBQyxDQUFBLGNBQTVCO0FBRUE7YUFBVSxzR0FBVjt5QkFDSSxJQUFDLENBQUEsY0FBRCxDQUFnQixFQUFoQjtBQURKOztJQVBFOzs7Ozs7QUFVVixNQUFNLENBQUMsT0FBUCxHQUVJO0lBQUEsT0FBQSxFQUVJO1FBQUEsZ0JBQUEsRUFDSTtZQUFBLElBQUEsRUFBTyxtQkFBUDtZQUNBLElBQUEsRUFBTyxvQ0FEUDtZQUVBLEtBQUEsRUFBTyxRQUZQO1NBREo7S0FGSjtJQU9BLGdCQUFBLEVBQWtCLFNBQUE7QUFFZCxZQUFBO1FBQUEsSUFBVSxDQUFJLElBQUMsQ0FBQSxVQUFmO0FBQUEsbUJBQUE7O1FBRUEsSUFBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQWIsQ0FBaUIsYUFBQSxHQUFhLDRDQUFnQixJQUFDLENBQUEsSUFBakIsQ0FBOUIsRUFBdUQsS0FBdkQsQ0FBSDttQkFDSSxJQUFDLENBQUEsVUFBVSxDQUFDLFVBQVosQ0FBQSxFQURKO1NBQUEsTUFBQTttQkFHSSxJQUFDLENBQUEsVUFBVSxDQUFDLFFBQVosQ0FBQSxFQUhKOztJQUpjLENBUGxCO0lBZ0JBLGNBQUEsRUFBZ0IsU0FBQTt5Q0FBRyxJQUFDLENBQUEsYUFBRCxJQUFDLENBQUEsYUFBYyxJQUFJLFVBQUosQ0FBZSxJQUFmO0lBQWxCLENBaEJoQiIsInNvdXJjZXNDb250ZW50IjpbIlxuIyAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAwMDAwICAwMDAgIDAwMDAwMDAgICAgMDAwICAgICAgMDAwMDAwMDAgICAwMDAwMDAwXG4jIDAwMCAgMDAwMCAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwICAgICAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAwMDAgICAgICAgMDAwXG4jIDAwMCAgMDAwIDAgMDAwICAgMDAwIDAwMCAgIDAwMCAgMDAwMDAwMCAgIDAwMCAgMDAwMDAwMCAgICAwMDAgICAgICAwMDAwMDAwICAgMDAwMDAwMFxuIyAwMDAgIDAwMCAgMDAwMCAgICAgMDAwICAgICAwMDAgICAgICAgMDAwICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgMDAwICAgICAgICAgICAgMDAwXG4jIDAwMCAgMDAwICAgMDAwICAgICAgMCAgICAgIDAwMCAgMDAwMDAwMCAgIDAwMCAgMDAwMDAwMCAgICAwMDAwMDAwICAwMDAwMDAwMCAgMDAwMDAwMFxuXG57IGtlcnJvciwgXyB9ID0gcmVxdWlyZSAna3hrJ1xuXG5jbGFzcyBJbnZpc2libGVzXG5cbiAgICBjb25zdHJ1Y3RvcjogKEBlZGl0b3IpIC0+IEBlZGl0b3Iub24gJ2ZpbGUnLCBAb25GaWxlXG5cbiAgICBkZWw6IC0+IEBlZGl0b3IucmVtb3ZlTGlzdGVuZXIgJ2ZpbGUnLCBAb25GaWxlXG5cbiAgICBvbkZpbGU6IChmaWxlKSA9PlxuXG4gICAgICAgIGlmIHdpbmRvdy5zdGF0ZS5nZXQgXCJpbnZpc2libGVzfCN7ZmlsZX1cIlxuICAgICAgICAgICAgQHNob3coKVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBAY2xlYXIoKVxuXG4gICAgIyAwMDAgIDAwMCAgIDAwMCAgIDAwMDAwMDAgIDAwMDAwMDAwICAwMDAwMDAwMCAgIDAwMDAwMDAwMCAgXG4gICAgIyAwMDAgIDAwMDAgIDAwMCAgMDAwICAgICAgIDAwMCAgICAgICAwMDAgICAwMDAgICAgIDAwMCAgICAgXG4gICAgIyAwMDAgIDAwMCAwIDAwMCAgMDAwMDAwMCAgIDAwMDAwMDAgICAwMDAwMDAwICAgICAgIDAwMCAgICAgXG4gICAgIyAwMDAgIDAwMCAgMDAwMCAgICAgICAwMDAgIDAwMCAgICAgICAwMDAgICAwMDAgICAgIDAwMCAgICAgXG4gICAgIyAwMDAgIDAwMCAgIDAwMCAgMDAwMDAwMCAgIDAwMDAwMDAwICAwMDAgICAwMDAgICAgIDAwMCAgICAgXG4gICAgXG4gICAgb25MaW5lSW5zZXJ0ZWQ6IChsaSkgPT5cblxuICAgICAgICBsaW5lID0gQGVkaXRvci5saW5lIGxpXG4gICAgICAgIGtpbmQgPSBsaW5lLmVuZHNXaXRoKCcgJykgYW5kICd0cmFpbGluZycgb3IgJ25ld2xpbmUnXG4gICAgICAgIEBlZGl0b3IubWV0YS5hZGRcbiAgICAgICAgICAgIGxpbmU6ICBsaVxuICAgICAgICAgICAgaHRtbDogICcmIzk2ODcnXG4gICAgICAgICAgICBzdGFydDogbGluZS5sZW5ndGhcbiAgICAgICAgICAgIGVuZDogICBsaW5lLmxlbmd0aFxuICAgICAgICAgICAgeU9mZnNldDogLTFcbiAgICAgICAgICAgIGNsc3M6ICAnaW52aXNpYmxlICcgKyBraW5kXG4gICAgICAgICAgICBcbiAgICAgICAgcyA9IEBlZGl0b3IudGFibGluZSBsaVxuICAgICAgICBwID0gMFxuICAgICAgICB3aGlsZSBwIDwgcy5sZW5ndGhcbiAgICAgICAgICAgIG4gPSAxXG4gICAgICAgICAgICBpZiBzW3BdID09ICdcXHQnXG4gICAgICAgICAgICAgICAgbiA9IDQtKHAlNClcbiAgICAgICAgICAgICAgICBzID0gcy5zcGxpY2UgcCwgMSwgXy5wYWRTdGFydCBcIlwiLCBuXG4gICAgICAgICAgICAgICAgQGVkaXRvci5tZXRhLmFkZFxuICAgICAgICAgICAgICAgICAgICBsaW5lOiAgbGlcbiAgICAgICAgICAgICAgICAgICAgaHRtbDogICcmIzk2NTYnXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0OiBwXG4gICAgICAgICAgICAgICAgICAgIGVuZDogICBwXG4gICAgICAgICAgICAgICAgICAgIHlPZmZzZXQ6IC0xXG4gICAgICAgICAgICAgICAgICAgIGNsc3M6ICAnaW52aXNpYmxlIGludmlzaWJsZS10YWInXG4gICAgICAgICAgICBwICs9IG5cbiAgICAgICAgICAgIFxuICAgICMgIDAwMDAwMDAgIDAwMCAgIDAwMCAgIDAwMDAwMDAgICAwMDAgICAwMDAgICAwMDAwMDAwICAgMDAwMDAwMDAgIFxuICAgICMgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAwICAwMDAgIDAwMCAgICAgICAgMDAwICAgICAgIFxuICAgICMgMDAwICAgICAgIDAwMDAwMDAwMCAgMDAwMDAwMDAwICAwMDAgMCAwMDAgIDAwMCAgMDAwMCAgMDAwMDAwMCAgIFxuICAgICMgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgIDAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgIFxuICAgICMgIDAwMDAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAgMDAwMDAwMDAgIFxuICAgIFxuICAgIG9uTGluZUNoYW5nZWQ6IChsaSkgPT5cblxuICAgICAgICBtZXRhcyA9IEBlZGl0b3IubWV0YS5tZXRhc0F0TGluZUluZGV4KGxpKS5maWx0ZXIgKG0pIC0+IG1bMl0uY2xzcy5zdGFydHNXaXRoICdpbnZpc2libGUnXG4gICAgICAgIHJldHVybiBrZXJyb3IgXCJubyBpbnZpc2libGUgbWV0YSBhdCBsaW5lICN7bGl9P1wiIGlmIG5vdCBtZXRhcy5sZW5ndGhcbiAgICAgICAgQGVkaXRvci5tZXRhLmRlbE1ldGEgbWV0YXNbMF1cbiAgICAgICAgQG9uTGluZUluc2VydGVkIGxpXG5cbiAgICAjICAwMDAwMDAwICAgIDAwMDAwMDAgIDAwMDAwMDAwMCAgMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAgMDAwMDAwMDAwICAwMDAwMDAwMCAgXG4gICAgIyAwMDAgICAwMDAgIDAwMCAgICAgICAgICAwMDAgICAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgICAgIDAwMCAgICAgMDAwICAgICAgIFxuICAgICMgMDAwMDAwMDAwICAwMDAgICAgICAgICAgMDAwICAgICAwMDAgICAwMDAgMDAwICAgMDAwMDAwMDAwICAgICAwMDAgICAgIDAwMDAwMDAgICBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgICAgICAgIDAwMCAgICAgMDAwICAgICAwMDAgICAgIDAwMCAgIDAwMCAgICAgMDAwICAgICAwMDAgICAgICAgXG4gICAgIyAwMDAgICAwMDAgICAwMDAwMDAwICAgICAwMDAgICAgIDAwMCAgICAgIDAgICAgICAwMDAgICAwMDAgICAgIDAwMCAgICAgMDAwMDAwMDAgIFxuICAgIFxuICAgIGFjdGl2YXRlOiAtPlxuXG4gICAgICAgIHdpbmRvdy5zdGF0ZS5zZXQgXCJpbnZpc2libGVzfCN7QGVkaXRvci5jdXJyZW50RmlsZSA/IEBlZGl0b3IubmFtZX1cIiwgdHJ1ZVxuICAgICAgICBAc2hvdygpXG4gICAgICAgIFxuICAgIGRlYWN0aXZhdGU6IC0+XG5cbiAgICAgICAgd2luZG93LnN0YXRlLnNldCBcImludmlzaWJsZXN8I3tAZWRpdG9yLmN1cnJlbnRGaWxlfVwiXG4gICAgICAgIEBjbGVhcigpXG5cbiAgICAjICAwMDAwMDAwICAwMDAgICAgICAwMDAwMDAwMCAgIDAwMDAwMDAgICAwMDAwMDAwMCAgIFxuICAgICMgMDAwICAgICAgIDAwMCAgICAgIDAwMCAgICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgXG4gICAgIyAwMDAgICAgICAgMDAwICAgICAgMDAwMDAwMCAgIDAwMDAwMDAwMCAgMDAwMDAwMCAgICBcbiAgICAjIDAwMCAgICAgICAwMDAgICAgICAwMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIFxuICAgICMgIDAwMDAwMDAgIDAwMDAwMDAgIDAwMDAwMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgXG4gICAgXG4gICAgY2xlYXI6IC0+XG5cbiAgICAgICAgQGVkaXRvci5yZW1vdmVMaXN0ZW5lciAnbGluZUNoYW5nZWQnLCAgQG9uTGluZUNoYW5nZWRcbiAgICAgICAgQGVkaXRvci5yZW1vdmVMaXN0ZW5lciAnbGluZUluc2VydGVkJywgQG9uTGluZUluc2VydGVkXG4gICAgICAgIEBlZGl0b3IubWV0YS5kZWxDbGFzcyAnaW52aXNpYmxlJ1xuXG4gICAgIyAgMDAwMDAwMCAgMDAwICAgMDAwICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgXG4gICAgIyAwMDAgICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAwIDAwMCAgXG4gICAgIyAwMDAwMDAwICAgMDAwMDAwMDAwICAwMDAgICAwMDAgIDAwMDAwMDAwMCAgXG4gICAgIyAgICAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgXG4gICAgIyAwMDAwMDAwICAgMDAwICAgMDAwICAgMDAwMDAwMCAgIDAwICAgICAwMCAgXG4gICAgXG4gICAgc2hvdzogLT5cblxuICAgICAgICBAY2xlYXIoKVxuXG4gICAgICAgIEBlZGl0b3Iub24gJ2xpbmVDaGFuZ2VkJywgIEBvbkxpbmVDaGFuZ2VkXG4gICAgICAgIEBlZGl0b3Iub24gJ2xpbmVJbnNlcnRlZCcsIEBvbkxpbmVJbnNlcnRlZFxuXG4gICAgICAgIGZvciBsaSBpbiBbMC4uLkBlZGl0b3IubnVtTGluZXMoKV1cbiAgICAgICAgICAgIEBvbkxpbmVJbnNlcnRlZCBsaVxuXG5tb2R1bGUuZXhwb3J0cyA9XG5cbiAgICBhY3Rpb25zOlxuXG4gICAgICAgIHRvZ2dsZUludmlzaWJsZXM6XG4gICAgICAgICAgICBuYW1lOiAgJ1RvZ2dsZSBJbnZpc2libGVzJ1xuICAgICAgICAgICAgdGV4dDogICd0b2dnbGUgaW52aXNpYmxlcyBmb3IgY3VycmVudCBmaWxlJ1xuICAgICAgICAgICAgY29tYm86ICdjdHJsK2knXG5cbiAgICB0b2dnbGVJbnZpc2libGVzOiAtPlxuXG4gICAgICAgIHJldHVybiBpZiBub3QgQGludmlzaWJsZXNcbiAgICAgICAgXG4gICAgICAgIGlmIHdpbmRvdy5zdGF0ZS5nZXQgXCJpbnZpc2libGVzfCN7QGN1cnJlbnRGaWxlID8gQG5hbWV9XCIsIGZhbHNlXG4gICAgICAgICAgICBAaW52aXNpYmxlcy5kZWFjdGl2YXRlKClcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgQGludmlzaWJsZXMuYWN0aXZhdGUoKVxuXG4gICAgaW5pdEludmlzaWJsZXM6IC0+IEBpbnZpc2libGVzID89IG5ldyBJbnZpc2libGVzIEBcbiJdfQ==
//# sourceURL=../../../coffee/editor/actions/invisibles.coffee