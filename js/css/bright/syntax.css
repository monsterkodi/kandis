/*
 0000000  000   000  000   000  000000000   0000000   000   000
000        000 000   0000  000     000     000   000   000 000
0000000     00000    000 0 000     000     000000000    00000
     000     000     000  0000     000     000   000   000 000
0000000      000     000   000     000     000   000  000   000
*/
.syntax {
  color: #888;
}
.browserRow.array {
  color: #666;
}
.browserRow .arrayIndex {
  color: #ddd;
  font-size: 12px;
}
.browserRow .arrayDot {
  color: #eee;
}
.invisible {
  color: #aaa;
  opacity: 0.5;
}
.bool,
.true {
  color: #88f;
}
.false {
  color: #44f;
}
.nil,
.value {
  color: #808;
}
.dictionary {
  color: #880;
}
.array {
  color: #00f;
}
.obj,
.owner,
.callee,
.class {
  color: #800;
}
.variable {
  color: #a0a;
}
.range {
  color: #80f;
}
.require {
  color: #0f0;
}
.this,
.marker {
  opacity: 0.6;
}
.module {
  color: #a80;
}
.property {
  opacity: 0.8;
  color: #a32;
}
.elem,
.namespace {
  color: #48a;
}
.elem.member,
.namespace.member {
  color: #f80;
}
.number,
.int {
  color: #66f;
}
.float {
  color: #606;
}
.dictionary.key.marker {
  color: #88f;
  opacity: 1;
}
.func,
.function {
  color: #00c;
}
.func.call,
.function.call {
  color: #d00;
}
.func.marker,
.function.marker {
  color: #55f;
  opacity: 1;
}
.func.bracket,
.function.bracket {
  color: #55f;
}
.func.argument,
.function.argument {
  color: #aaf;
}
.func.argument.punct,
.function.argument.punct {
  opacity: 0.5;
}
.func.marker.head,
.function.marker.head,
.func.marker.tail,
.function.marker.tail {
  color: transparent;
}
.func.marker.tail::before,
.function.marker.tail::before {
  border-color: #88f;
}
.func.marker.head::before,
.function.marker.head::before {
  border-left-color: #88f;
}
.func.marker.tail.bound::before,
.function.marker.tail.bound::before {
  border-color: #f40;
}
.func.marker.head.bound::before,
.function.marker.head.bound::before {
  border-left-color: #f40;
}
.class.function,
.method {
  color: #008;
}
.class.function.call,
.method.call {
  color: #d00;
}
.class.function.definition,
.method.definition,
.class.function.template,
.method.template {
  color: #2aa;
}
.template {
  color: #2aa;
}
.operator {
  color: #a80;
}
.operator.negate {
  color: #600;
}
.class.variable {
  color: #a0a;
}
.class.static {
  color: #c0c;
}
.static.class.marker {
  color: #ccf;
  opacity: 1;
}
.keypath {
  color: #c00;
}
.syntax.cond,
.keyword {
  color: #66f !important;
}
.syntax.cond.null,
.keyword.null {
  color: #a00 !important;
}
.macro {
  color: #c0f;
}
.macro.define {
  color: #80c;
}
.macro.call {
  color: #f0f;
}
.macro.argument {
  color: #a8a;
}
.variable.err {
  color: #f08;
}
.syntax.exists {
  opacity: 0.7;
}
.string.single {
  color: #0b0 !important;
}
.string.double,
.string.triple {
  color: #090 !important;
}
.interpolation.marker {
  color: #0d0;
}
.interpolation.marker,
.string.marker {
  opacity: 0.7;
}
.comment,
.comment.string,
.comment.string.double {
  color: #ccc !important;
}
.comment.header {
  color: #ddd !important;
  background: #ddd;
  border-left-color: #ccc;
  border-bottom-color: #bbb;
}
.comment.header.minimap {
  color: #999 !important;
  opacity: 1;
}
.comment.triple.header {
  color: #ccf !important;
  background: #ccf;
  border-left-color: #aaf;
  border-bottom-color: #88f;
}
.comment.triple.header.minimap {
  color: #88f !important;
}
.header.marker.minimap {
  color: #222 !important;
}
.require.variable {
  color: #080;
}
.require.string {
  color: #0a0;
}
.require.keyword.require {
  color: #666;
}
.require.syntax {
  opacity: 0.5;
}
.test {
  color: #ccf;
}
.test-suite {
  color: #88f;
}
.test-fail {
  color: #f00;
}
.test-error {
  color: #fa0;
}
.test-pass {
  color: #0a0;
}
.h1 {
  color: #00c;
}
.h2 {
  color: #00a;
}
.h3 {
  color: #008;
}
.h4 {
  color: #006;
}
.h5 {
  color: #060;
}
.li1 {
  color: transparent;
}
.li1::before {
  color: #080;
}
.li2 {
  color: transparent;
}
.li2::before {
  color: #090;
}
.li3 {
  color: transparent;
}
.li3::before {
  color: #0a0;
}
.bold {
  color: #000;
  font-weight: bold;
}
.bold.marker {
  opacity: 0.3;
}
.code {
  color: #88f;
}
.italic {
  font-style: italic;
}
.found {
  text-decoration: underline;
}
