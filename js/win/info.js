// koffee 0.56.0

/*
000  000   000  00000000   0000000 
000  0000  000  000       000   000
000  000 0 000  000000    000   000
000  000  0000  000       000   000
000  000   000  000        0000000
 */
var $, Info, _, elem, post, ref, shortCount, tooltip,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), shortCount = ref.shortCount, tooltip = ref.tooltip, post = ref.post, elem = ref.elem, $ = ref.$, _ = ref._;

Info = (function() {
    function Info(editor) {
        this.onHighlight = bind(this.onHighlight, this);
        this.onSelection = bind(this.onSelection, this);
        this.onCursor = bind(this.onCursor, this);
        this.onFilesCount = bind(this.onFilesCount, this);
        this.onFuncsCount = bind(this.onFuncsCount, this);
        this.onClassesCount = bind(this.onClassesCount, this);
        this.onWordCount = bind(this.onWordCount, this);
        this.onNumLines = bind(this.onNumLines, this);
        this.reload = bind(this.reload, this);
        this.setEditor = bind(this.setEditor, this);
        var ttip;
        post.on('editorFocus', this.setEditor);
        ttip = function(e, t) {
            return new tooltip({
                elem: e,
                text: t,
                x: 0,
                y: 1,
                textSize: 11,
                keep: true
            });
        };
        this.elem = $('info');
        this.topline = elem({
            "class": "info-line top"
        });
        this.cursorColumn = elem('span', {
            "class": "info-cursor-column"
        });
        this.cursorColumn.onclick = (function(_this) {
            return function() {
                return _this.editor.focus() + _this.editor.singleCursorAtPos([0, _this.editor.cursorPos()[1]]);
            };
        })(this);
        this.topline.appendChild(this.cursorColumn);
        ttip(this.cursorColumn, 'x');
        this.sticky = elem('span', {
            "class": "info-sticky empty"
        });
        this.sticky.innerHTML = 'â—‹';
        this.topline.appendChild(this.sticky);
        this.cursors = elem('span', {
            "class": "info-cursors"
        });
        this.cursors.onclick = (function(_this) {
            return function() {
                return _this.editor.focus() + _this.editor.clearCursors();
            };
        })(this);
        this.topline.appendChild(this.cursors);
        ttip(this.cursors, 'cursors');
        this.selecti = elem('span', {
            "class": "info-selections"
        });
        this.selecti.onclick = (function(_this) {
            return function() {
                return _this.editor.focus() + _this.editor.selectNone();
            };
        })(this);
        this.topline.appendChild(this.selecti);
        ttip(this.selecti, 'selections');
        this.highlig = elem('span', {
            "class": "info-highlights"
        });
        this.highlig.onclick = (function(_this) {
            return function() {
                return _this.editor.focus() + _this.editor.clearHighlights();
            };
        })(this);
        this.topline.appendChild(this.highlig);
        ttip(this.highlig, 'highlights');
        this.classes = elem('span', {
            "class": "info-classes empty"
        });
        this.topline.appendChild(this.classes);
        ttip(this.classes, 'classes');
        this.funcs = elem('span', {
            "class": "info-funcs empty"
        });
        this.topline.appendChild(this.funcs);
        ttip(this.funcs, 'funcs');
        post.on('classesCount', (function(_this) {
            return function(count) {
                return _this.onClassesCount(count);
            };
        })(this));
        post.on('funcsCount', (function(_this) {
            return function(count) {
                return _this.onFuncsCount(count);
            };
        })(this));
        this.elem.appendChild(this.topline);
        this.botline = elem({
            "class": "info-line bot"
        });
        this.cursorLine = elem('span', {
            "class": "info-cursor-line"
        });
        this.cursorLine.onclick = (function(_this) {
            return function() {
                return _this.editor.focus() + _this.editor.singleCursorAtPos([0, 0]);
            };
        })(this);
        this.botline.appendChild(this.cursorLine);
        ttip(this.cursorLine, 'y');
        this.lines = elem('span', {
            "class": "info-lines"
        });
        this.lines.onclick = (function(_this) {
            return function() {
                return _this.editor.focus() + _this.editor.singleCursorAtPos([0, _this.editor.numLines()]);
            };
        })(this);
        this.botline.appendChild(this.lines);
        ttip(this.lines, 'lines');
        this.files = elem('span', {
            "class": "info-files"
        });
        this.botline.appendChild(this.files);
        ttip(this.files, 'files');
        this.words = elem('span', {
            "class": "info-words empty"
        });
        this.words.style.display = 'none';
        this.botline.appendChild(this.words);
        ttip(this.words, 'words');
        post.on('filesCount', this.onFilesCount);
        this.elem.appendChild(this.botline);
        this.setEditor(editor);
    }

    Info.prototype.setEditor = function(editor) {
        if (editor === this.editor) {
            return;
        }
        if (this.editor != null) {
            this.editor.removeListener('numLines', this.onNumLines);
            this.editor.removeListener('lineInserted', this.onNumLines);
            this.editor.removeListener('lineDeleted', this.onNumLines);
            this.editor.removeListener('selection', this.onSelection);
            this.editor.removeListener('highlight', this.onHighlight);
            this.editor.removeListener('cursor', this.onCursor);
        }
        this.editor = editor;
        this.editor.on('numLines', this.onNumLines);
        this.editor.on('lineInserted', this.onNumLines);
        this.editor.on('lineDeleted', this.onNumLines);
        this.editor.on('selection', this.onSelection);
        this.editor.on('highlight', this.onHighlight);
        this.editor.on('cursor', this.onCursor);
        return this.onNumLines(this.editor.numLines());
    };

    Info.prototype.reload = function() {
        var counts;
        counts = post.get('indexer', 'counts');
        this.onClassesCount(counts.classes);
        this.onFuncsCount(counts.funcs);
        this.onFilesCount(counts.files);
        return this.onWordCount(counts.words);
    };

    Info.prototype.onNumLines = function(lc) {
        return this.lines.textContent = shortCount(lc != null ? lc : 0);
    };

    Info.prototype.onWordCount = function(wc) {
        this.words.textContent = shortCount(wc);
        return this.words.classList.toggle('empty', wc === 0);
    };

    Info.prototype.onClassesCount = function(cc) {
        this.classes.textContent = shortCount(cc);
        return this.classes.classList.toggle('empty', cc === 0);
    };

    Info.prototype.onFuncsCount = function(fc) {
        this.funcs.textContent = shortCount(fc);
        return this.funcs.classList.toggle('empty', fc === 0);
    };

    Info.prototype.onFilesCount = function(fc) {
        this.files.textContent = shortCount(fc);
        return this.files.classList.toggle('empty', fc === 0);
    };

    Info.prototype.onCursor = function() {
        this.cursorLine.textContent = this.editor.mainCursor()[1] + 1;
        this.cursorColumn.textContent = this.editor.mainCursor()[0];
        this.cursors.textContent = this.editor.numCursors();
        this.cursorColumn.classList.toggle('virtual', this.editor.isCursorVirtual());
        this.cursors.classList.toggle('empty', this.editor.numCursors() === 1);
        return this.sticky.classList.toggle('empty', !this.editor.stickySelection);
    };

    Info.prototype.onSelection = function() {
        this.selecti.textContent = this.editor.numSelections();
        this.selecti.classList.toggle('empty', this.editor.numSelections() === 0);
        return this.sticky.classList.toggle('empty', !this.editor.stickySelection);
    };

    Info.prototype.onHighlight = function() {
        this.highlig.textContent = this.editor.numHighlights();
        return this.highlig.classList.toggle('empty', this.editor.numHighlights() === 0);
    };

    return Info;

})();

module.exports = Info;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../../coffee/win/info.coffee