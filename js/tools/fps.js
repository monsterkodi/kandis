// koffee 0.56.0

/*
00000000  00000000    0000000
000       000   000  000     
000000    00000000   0000000 
000       000             000
000       000        0000000
 */
var $, FPS, clamp, elem, now, post, ref,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), clamp = ref.clamp, post = ref.post, elem = ref.elem, $ = ref.$;

now = require('performance-now');

FPS = (function() {
    function FPS() {
        this.stash = bind(this.stash, this);
        this.restore = bind(this.restore, this);
        this.draw = bind(this.draw, this);
        var x, y;
        this.elem = elem({
            "class": 'fps'
        });
        this.elem.style.display = 'none';
        this.canvas = elem('canvas', {
            "class": "fpsCanvas",
            width: 130 * 2,
            height: 30 * 2
        });
        this.elem.appendChild(this.canvas);
        y = parseInt(-30 / 2);
        x = parseInt(-130 / 2);
        this.canvas.style.transform = "translate3d(" + x + "px, " + y + "px, 0px) scale3d(0.5, 0.5, 1)";
        this.history = [];
        this.last = now();
        $('commandline-span').appendChild(this.elem);
        post.on('stash', this.stash);
        post.on('restore', this.restore);
    }

    FPS.prototype.draw = function() {
        var ctx, green, h, i, j, ms, red, ref1, time;
        time = now();
        this.history.push(time - this.last);
        while (this.history.length > 260) {
            this.history.shift();
        }
        this.canvas.height = this.canvas.height;
        ctx = this.canvas.getContext('2d');
        for (i = j = 0, ref1 = this.history.length; 0 <= ref1 ? j < ref1 : j > ref1; i = 0 <= ref1 ? ++j : --j) {
            ms = Math.max(0, this.history[i] - 17);
            red = parseInt(32 + 223 * clamp(0, 1, (ms - 16) / 16));
            green = parseInt(32 + 223 * clamp(0, 1, (ms - 32) / 32));
            ctx.fillStyle = "rgb(" + red + ", " + green + ", 32)";
            h = Math.min(ms, 60);
            ctx.fillRect(260 - this.history.length + i, 60 - h, 2, h);
        }
        this.last = time;
        if (this.elem.style.display !== 'none') {
            return window.requestAnimationFrame(this.draw);
        }
    };

    FPS.prototype.visible = function() {
        return this.elem.style.display !== 'none';
    };

    FPS.prototype.restore = function() {
        if (window.stash.get('fps')) {
            return this.toggle();
        }
    };

    FPS.prototype.stash = function() {
        if (this.visible()) {
            return window.stash.set('fps', true);
        } else {
            return window.stash.set('fps');
        }
    };

    FPS.prototype.toggle = function() {
        this.elem.style.display = this.visible() && 'none' || 'unset';
        this.history.push(49);
        if (this.visible()) {
            window.requestAnimationFrame(this.draw);
        }
        return this.stash();
    };

    return FPS;

})();

module.exports = FPS;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnBzLmpzIiwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBQUEsSUFBQSxtQ0FBQTtJQUFBOztBQVFBLE1BQTJCLE9BQUEsQ0FBUSxLQUFSLENBQTNCLEVBQUUsaUJBQUYsRUFBUyxlQUFULEVBQWUsZUFBZixFQUFxQjs7QUFFckIsR0FBQSxHQUFNLE9BQUEsQ0FBUSxpQkFBUjs7QUFFQTtJQUVXLGFBQUE7Ozs7QUFFVCxZQUFBO1FBQUEsSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFBLENBQUs7WUFBQSxDQUFBLEtBQUEsQ0FBQSxFQUFPLEtBQVA7U0FBTDtRQUNSLElBQUMsQ0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQVosR0FBc0I7UUFFdEIsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFBLENBQUssUUFBTCxFQUFlO1lBQUEsQ0FBQSxLQUFBLENBQUEsRUFBTyxXQUFQO1lBQW9CLEtBQUEsRUFBTyxHQUFBLEdBQUksQ0FBL0I7WUFBa0MsTUFBQSxFQUFRLEVBQUEsR0FBRyxDQUE3QztTQUFmO1FBQ1YsSUFBQyxDQUFBLElBQUksQ0FBQyxXQUFOLENBQWtCLElBQUMsQ0FBQSxNQUFuQjtRQUVBLENBQUEsR0FBSSxRQUFBLENBQVUsQ0FBQyxFQUFELEdBQUksQ0FBZDtRQUNKLENBQUEsR0FBSSxRQUFBLENBQVMsQ0FBQyxHQUFELEdBQUssQ0FBZDtRQUNKLElBQUMsQ0FBQSxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQWQsR0FBMEIsY0FBQSxHQUFlLENBQWYsR0FBaUIsTUFBakIsR0FBdUIsQ0FBdkIsR0FBeUI7UUFFbkQsSUFBQyxDQUFBLE9BQUQsR0FBVztRQUNYLElBQUMsQ0FBQSxJQUFELEdBQVEsR0FBQSxDQUFBO1FBRVIsQ0FBQSxDQUFFLGtCQUFGLENBQXFCLENBQUMsV0FBdEIsQ0FBa0MsSUFBQyxDQUFBLElBQW5DO1FBRUEsSUFBSSxDQUFDLEVBQUwsQ0FBUSxPQUFSLEVBQW1C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MDAwMDAwMCAgMDAwMDAwMDAgICAgMDAwMDAwMFxuMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgICBcbjAwMDAwMCAgICAwMDAwMDAwMCAgIDAwMDAwMDAgXG4wMDAgICAgICAgMDAwICAgICAgICAgICAgIDAwMFxuMDAwICAgICAgIDAwMCAgICAgICAgMDAwMDAwMCBcbiMjI1xuXG57IGNsYW1wLCBwb3N0LCBlbGVtLCAkIH0gPSByZXF1aXJlICdreGsnXG5cbm5vdyA9IHJlcXVpcmUgJ3BlcmZvcm1hbmNlLW5vdydcblxuY2xhc3MgRlBTXG5cbiAgICBjb25zdHJ1Y3RvcjogKCkgLT5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgIEBlbGVtID0gZWxlbSBjbGFzczogJ2ZwcydcbiAgICAgICAgQGVsZW0uc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuXG4gICAgICAgIEBjYW52YXMgPSBlbGVtICdjYW52YXMnLCBjbGFzczogXCJmcHNDYW52YXNcIiwgd2lkdGg6IDEzMCoyLCBoZWlnaHQ6IDMwKjJcbiAgICAgICAgQGVsZW0uYXBwZW5kQ2hpbGQgQGNhbnZhc1xuXG4gICAgICAgIHkgPSBwYXJzZUludCAgLTMwLzJcbiAgICAgICAgeCA9IHBhcnNlSW50IC0xMzAvMlxuICAgICAgICBAY2FudmFzLnN0eWxlLnRyYW5zZm9ybSA9IFwidHJhbnNsYXRlM2QoI3t4fXB4LCAje3l9cHgsIDBweCkgc2NhbGUzZCgwLjUsIDAuNSwgMSlcIlxuICAgICAgICBcbiAgICAgICAgQGhpc3RvcnkgPSBbXVxuICAgICAgICBAbGFzdCA9IG5vdygpXG4gICAgICAgIFxuICAgICAgICAkKCdjb21tYW5kbGluZS1zcGFuJykuYXBwZW5kQ2hpbGQgQGVsZW1cbiAgICAgICAgXG4gICAgICAgIHBvc3Qub24gJ3N0YXNoJywgICBAc3Rhc2hcbiAgICAgICAgcG9zdC5vbiAncmVzdG9yZScsIEByZXN0b3JlXG4gICAgICAgICAgICBcbiAgICAjIDAwMDAwMDAgICAgMDAwMDAwMDAgICAgMDAwMDAwMCAgIDAwMCAgIDAwMFxuICAgICMgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwIDAgMDAwXG4gICAgIyAwMDAgICAwMDAgIDAwMDAwMDAgICAgMDAwMDAwMDAwICAwMDAwMDAwMDBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMFxuICAgICMgMDAwMDAwMCAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAgICAgIDAwXG4gICAgICAgICAgICAgICAgXG4gICAgZHJhdzogPT5cbiAgICAgICAgXG4gICAgICAgIHRpbWUgPSBub3coKVxuICAgICAgICBAaGlzdG9yeS5wdXNoIHRpbWUtQGxhc3RcbiAgICAgICAgQGhpc3Rvcnkuc2hpZnQoKSB3aGlsZSBAaGlzdG9yeS5sZW5ndGggPiAyNjBcbiAgICAgICAgQGNhbnZhcy5oZWlnaHQgPSBAY2FudmFzLmhlaWdodFxuICAgICAgICBjdHggPSBAY2FudmFzLmdldENvbnRleHQgJzJkJyAgICAgICAgXG4gICAgICAgIGZvciBpIGluIFswLi4uQGhpc3RvcnkubGVuZ3RoXSAgXG4gICAgICAgICAgICBtcyAgICA9IE1hdGgubWF4IDAsIEBoaXN0b3J5W2ldLTE3XG4gICAgICAgICAgICByZWQgICA9IHBhcnNlSW50IDMyICsgMjIzICogY2xhbXAgMCwxLCAobXMtMTYpLzE2XG4gICAgICAgICAgICBncmVlbiA9IHBhcnNlSW50IDMyICsgMjIzICogY2xhbXAgMCwxLCAobXMtMzIpLzMyXG4gICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gXCJyZ2IoI3tyZWR9LCAje2dyZWVufSwgMzIpXCJcbiAgICAgICAgICAgIGggPSBNYXRoLm1pbiBtcywgNjBcbiAgICAgICAgICAgIGN0eC5maWxsUmVjdCAyNjAtQGhpc3RvcnkubGVuZ3RoK2ksIDYwLWgsIDIsIGhcbiAgICAgICAgQGxhc3QgPSB0aW1lXG4gICAgICAgIGlmIEBlbGVtLnN0eWxlLmRpc3BsYXkgIT0gJ25vbmUnXG4gICAgICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIEBkcmF3XG5cbiAgICB2aXNpYmxlOiAtPiBAZWxlbS5zdHlsZS5kaXNwbGF5ICE9ICdub25lJ1xuXG4gICAgcmVzdG9yZTogPT4gQHRvZ2dsZSgpIGlmIHdpbmRvdy5zdGFzaC5nZXQgJ2ZwcydcbiAgICBzdGFzaDogICA9PiBpZiBAdmlzaWJsZSgpIHRoZW4gd2luZG93LnN0YXNoLnNldCgnZnBzJywgdHJ1ZSkgZWxzZSB3aW5kb3cuc3Rhc2guc2V0ICdmcHMnXG5cbiAgICB0b2dnbGU6IC0+IFxuICAgICAgICBcbiAgICAgICAgQGVsZW0uc3R5bGUuZGlzcGxheSA9IEB2aXNpYmxlKCkgYW5kICdub25lJyBvciAndW5zZXQnICAgICAgIFxuICAgICAgICBAaGlzdG9yeS5wdXNoIDQ5XG4gICAgICAgIGlmIEB2aXNpYmxlKClcbiAgICAgICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgQGRyYXdcbiAgICAgICAgQHN0YXNoKClcblxubW9kdWxlLmV4cG9ydHMgPSBGUFNcblxuIl19
//# sourceURL=../../coffee/tools/fps.coffee